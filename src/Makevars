#This should be the CUDA directory
CUDA_HOME = /usr/local/cuda-10.0/

#This should be defined in the environment varibale
#R_INCLUDE_DIR
#R_LIBS_USER

#########################################
RCPP_INC = $(R_LIBS_USER)/Rcpp/include

NVCC = $(CUDA_HOME)/bin/nvcc
CUDA_INC = $(CUDA_HOME)/include
CUDA_LIB = $(CUDA_HOME)/lib64

# This defines what the shared object libraries will be
PKG_LIBS= -L${CUDA_LIB} -lcudart_static -lcusparse

NVCC_FLAGS =  -Xcompiler "-fPIC" -I$(R_INCLUDE_DIR) 

### Define objects
CU_SOURCES := $(wildcard *cu)
#CU_SHAREDLIBS := $(patsubst %.cu, %.o,$(CU_SOURCES))
CU_SHAREDLIBS= $(CU_SOURCES:.cu=.o)

CPP_SOURCES := $(wildcard *.cpp)
#CPP_SHAREDLIBS := $(patsubst %.cpp, %.o, $(CPP_SOURCES))
CPP_SHAREDLIBS=$(CPP_SOURCES:.cpp=.o)

OBJECTS = $(CU_SHAREDLIBS) $(CPP_SHAREDLIBS)

all: rcppcuda.so

rcppcuda.so: $(OBJECTS)
	 $(NVCC) ${PKG_LIBS} -o kernel.dll --shared $(CU_SHAREDLIBS) 

%.o: %.cpp $(CPP_SOURCES)
			$(CXX) $< -c -fPIC -I$(R_INCLUDE_DIR) -I$(RCPP_INC)  -I.

%.o: %.cu $(CU_SOURCES)
			$(NVCC) $(NVCC_FLAGS) -I$(CUDA_INC) $< -c  -I.
			

clean: 
			rm -f *.o *.so *.dll